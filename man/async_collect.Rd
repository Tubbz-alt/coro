% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step-reduce.R
\name{async_collect}
\alias{async_collect}
\title{Collect output of an asynchronous iterator}
\usage{
async_collect(x, n = NULL)
}
\arguments{
\item{x}{A reducible object.}

\item{n}{The number of elements to take from \code{x}.}
}
\description{
\code{async_collect()} takes an asynchronous iterator, i.e. an iterable
function that is also awaitable. \code{async_collect()} returns an
awaitable that eventually resolves to a list containing the values
returned by the iterator. The values are collected until exhaustion
unless \code{n} is supplied. The collection is grown geometrically for
performance.
}
